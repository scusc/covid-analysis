<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0511.0935                               -->
<workbook original-version='18.1' source-build='2021.1.2 (20211.21.0511.0935)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (covidtableau1)' inline='true' name='federated.0dsa5gm1ew2zj70zrf0c40l6dscx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidtableau1' name='excel-direct.19kvb6w0ky8js31ee4fkx0u8dpra'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/covidtableau1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.19kvb6w0ky8js31ee4fkx0u8dpra' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.19kvb6w0ky8js31ee4fkx0u8dpra' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percentage' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_68003468CACB478C9282CE57C3DFF972]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_68003468CACB478C9282CE57C3DFF972]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percentage]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>death_percentage</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_68003468CACB478C9282CE57C3DFF972]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_68003468CACB478C9282CE57C3DFF972]' role='measure' type='quantitative' />
      <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_68003468CACB478C9282CE57C3DFF972'>
            <properties context=''>
              <relation connection='excel-direct.19kvb6w0ky8js31ee4fkx0u8dpra' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='death_percentage' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (covidtableau3)' inline='true' name='federated.1kr6q5p00jirp91eqo53y17yktqh' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidtableau3' name='excel-direct.0o4l3a21t07wmy199ilnj128ryp0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/covidtableau3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0o4l3a21t07wmy199ilnj128ryp0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='hihginfectioncount' ordinal='2' />
            <column datatype='real' name='percentpopulationinfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0o4l3a21t07wmy199ilnj128ryp0' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='hihginfectioncount' ordinal='2' />
            <column datatype='real' name='percentpopulationinfected' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D232:no:A1:D232:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4EA97E01A226401FB109F6F82E6344E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4EA97E01A226401FB109F6F82E6344E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hihginfectioncount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hihginfectioncount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hihginfectioncount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4EA97E01A226401FB109F6F82E6344E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentpopulationinfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentpopulationinfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>percentpopulationinfected</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_4EA97E01A226401FB109F6F82E6344E5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_4EA97E01A226401FB109F6F82E6344E5]' role='measure' type='quantitative' />
      <column caption='Hihginfectioncount' datatype='integer' name='[hihginfectioncount]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Percentpopulationinfected' datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='%null%' />
        <semantic-value key='[County].[Name]' value='%null%' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_4EA97E01A226401FB109F6F82E6344E5'>
            <properties context=''>
              <relation connection='excel-direct.0o4l3a21t07wmy199ilnj128ryp0' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D232:no:A1:D232:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='hihginfectioncount' ordinal='2' />
                  <column datatype='real' name='percentpopulationinfected' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (covidtableau4)' inline='true' name='federated.0jyjzv71bv2cb91177alg0yga28f' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidtableau4' name='excel-direct.0y1uvno1yzpum219zbbvc11r68sn'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/covidtableau4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0y1uvno1yzpum219zbbvc11r68sn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='hihginfectioncount' ordinal='3' />
            <column datatype='real' name='percentpopulationinfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0y1uvno1yzpum219zbbvc11r68sn' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='hihginfectioncount' ordinal='3' />
            <column datatype='real' name='percentpopulationinfected' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DADC10B5A1C54ADC8C89BCC08100D840]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DADC10B5A1C54ADC8C89BCC08100D840]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DADC10B5A1C54ADC8C89BCC08100D840]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hihginfectioncount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[hihginfectioncount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>hihginfectioncount</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DADC10B5A1C54ADC8C89BCC08100D840]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percentpopulationinfected</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percentpopulationinfected]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>percentpopulationinfected</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_DADC10B5A1C54ADC8C89BCC08100D840]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_DADC10B5A1C54ADC8C89BCC08100D840]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Hihginfectioncount' datatype='integer' name='[hihginfectioncount]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Percentpopulationinfected' datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pitcairn&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_DADC10B5A1C54ADC8C89BCC08100D840'>
            <properties context=''>
              <relation connection='excel-direct.0y1uvno1yzpum219zbbvc11r68sn' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='hihginfectioncount' ordinal='3' />
                  <column datatype='real' name='percentpopulationinfected' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (covidtableau2)' inline='true' name='federated.1ubtnps0d0tfy4141rksx1d7vh6d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covidtableau2' name='excel-direct.1nara9t10716ht1d89sum1acv9oh'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/covidtableau2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1nara9t10716ht1d89sum1acv9oh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1nara9t10716ht1d89sum1acv9oh' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='totaldeathcount' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>totaldeathcount</remote-name>
            <remote-type>20</remote-type>
            <local-name>[totaldeathcount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>totaldeathcount</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>3</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_61BEC342A73D4ACCBAA2878F072ED20B]' role='measure' type='quantitative' />
      <column caption='continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Totaldeathcount' datatype='integer' name='[totaldeathcount]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_61BEC342A73D4ACCBAA2878F072ED20B'>
            <properties context=''>
              <relation connection='excel-direct.1nara9t10716ht1d89sum1acv9oh' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='totaldeathcount' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total cases and deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidtableau1)' name='federated.0dsa5gm1ew2zj70zrf0c40l6dscx' />
          </datasources>
          <datasource-dependencies datasource='federated.0dsa5gm1ew2zj70zrf0c40l6dscx'>
            <column caption='Death Percentage' datatype='real' name='[death_percentage]' role='measure' type='quantitative' />
            <column-instance column='[death_percentage]' derivation='Sum' name='[sum:death_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[sum:death_percentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[sum:death_percentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='46' />
            <format attr='width' field='[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[:Measure Names]' value='179' />
            <format attr='color' value='#1b1b1b' />
            <format attr='text-format' field='[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[Multiple Values]' value='' />
            <format attr='text-format' field='[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[sum:death_percentage:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#f5ead7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ddebf0' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='stroke-color' scope='cols' value='#f9a655' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C0D36258-A0D7-42D1-BD7D-954499CE57FB}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total deaths by continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidtableau2)' name='federated.1ubtnps0d0tfy4141rksx1d7vh6d' />
          </datasources>
          <datasource-dependencies datasource='federated.1ubtnps0d0tfy4141rksx1d7vh6d'>
            <column caption='continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[totaldeathcount]' derivation='Sum' name='[sum:totaldeathcount:qk]' pivot='key' type='quantitative' />
            <column caption='Totaldeathcount' datatype='integer' name='[totaldeathcount]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[sum:totaldeathcount:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3843094110488892' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[sum:totaldeathcount:qk]</rows>
        <cols>[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{0DC11160-085E-4674-AE18-7558A61E2014}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>geographic analysis&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidtableau3)' name='federated.1kr6q5p00jirp91eqo53y17yktqh' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1kr6q5p00jirp91eqo53y17yktqh'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentpopulationinfected' datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[percentpopulationinfected]' derivation='Sum' name='[sum:percentpopulationinfected:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1kr6q5p00jirp91eqo53y17yktqh].[Longitude (generated)]' field-type='quantitative' max='58338294.977647111' min='14674128.5040471' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1kr6q5p00jirp91eqo53y17yktqh].[Latitude (generated)]' field-type='quantitative' max='12718585.506073155' min='-8520234.0900902431' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1kr6q5p00jirp91eqo53y17yktqh].[sum:percentpopulationinfected:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <text column='[federated.1kr6q5p00jirp91eqo53y17yktqh].[none:location:nk]' />
              <color column='[federated.1kr6q5p00jirp91eqo53y17yktqh].[sum:percentpopulationinfected:qk]' />
              <geometry column='[federated.1kr6q5p00jirp91eqo53y17yktqh].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1kr6q5p00jirp91eqo53y17yktqh].[Latitude (generated)]</rows>
        <cols>[federated.1kr6q5p00jirp91eqo53y17yktqh].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3BEDB436-7238-404F-AF1B-4DB32084D2E9}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>trend forecasting</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (covidtableau4)' name='federated.0jyjzv71bv2cb91177alg0yga28f' />
          </datasources>
          <datasource-dependencies datasource='federated.0jyjzv71bv2cb91177alg0yga28f'>
            <column-instance column='[percentpopulationinfected]' derivation='Avg' name='[avg:percentpopulationinfected:qk]' pivot='key' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[percentpopulationinfected]' derivation='Avg' forecast-column-base='[avg:percentpopulationinfected:qk]' forecast-column-type='forecast-value' name='[fVal:avg:percentpopulationinfected:qk]' pivot='key' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='Percentpopulationinfected' datatype='real' name='[percentpopulationinfected]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0jyjzv71bv2cb91177alg0yga28f].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Canada&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0jyjzv71bv2cb91177alg0yga28f].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0jyjzv71bv2cb91177alg0yga28f].[none:location:nk]' />
              <text column='[federated.0jyjzv71bv2cb91177alg0yga28f].[none:location:nk]' />
              <color column='[federated.0jyjzv71bv2cb91177alg0yga28f].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0jyjzv71bv2cb91177alg0yga28f].[fVal:avg:percentpopulationinfected:qk]</rows>
        <cols>[federated.0jyjzv71bv2cb91177alg0yga28f].[tmn:date:ok]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{92776B66-BD4E-45FF-ADBE-ECA82971A9BD}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='900' maxwidth='1800' minheight='900' minwidth='1800' sizing-mode='fixed' />
      <zones>
        <zone h='38778' id='5' name='Sheet 2' w='36000' x='47667' y='52889' />
        <zone h='44667' id='10' name='Sheet 3' w='40944' x='45222' y='3444' />
        <zone h='40556' id='12' name='Sheet 4' w='34500' x='2167' y='49778' />
        <zone h='32889' id='3' name='Sheet 1' w='32056' x='3278' y='9222' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='14' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='13' param='vert' w='99112' x='444' y='889'>
                <zone fixed-size='280' h='44667' id='10' is-fixed='true' name='Sheet 3' w='40944' x='45222' y='3444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='32889' id='3' is-fixed='true' name='Sheet 1' w='32056' x='3278' y='9222'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='40556' id='12' is-fixed='true' name='Sheet 4' w='34500' x='2167' y='49778'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38778' id='5' is-fixed='true' name='Sheet 2' w='36000' x='47667' y='52889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{7AAF70FF-466D-4457-A451-46F808A7A41A}' />
    </dashboard>
  </dashboards>
  <windows source-height='93'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='115'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0dsa5gm1ew2zj70zrf0c40l6dscx].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4153DF3-A1D1-49F2-91B3-D81B98B1187E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[none:location:nk]</field>
            <field>[federated.1ubtnps0d0tfy4141rksx1d7vh6d].[none:totaldeathcount:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B97FB29-95DA-4660-B553-53E2B0A94C62}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.1kr6q5p00jirp91eqo53y17yktqh].[sum:percentpopulationinfected:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1kr6q5p00jirp91eqo53y17yktqh].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4BA6400C-484C-4535-AB1C-FB9C50AA5EF1}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0jyjzv71bv2cb91177alg0yga28f].[none:location:nk]&#10;[federated.0jyjzv71bv2cb91177alg0yga28f].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0jyjzv71bv2cb91177alg0yga28f].[none:Forecast Indicator:nk]</field>
            <field>[federated.0jyjzv71bv2cb91177alg0yga28f].[none:location:nk]</field>
            <field>[federated.0jyjzv71bv2cb91177alg0yga28f].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC970D95-A4C3-4CFE-B1DD-BD2F5109545D}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
          <highlight field='[federated.0jyjzv71bv2cb91177alg0yga28f].[none:location:nk]&#10;[federated.0jyjzv71bv2cb91177alg0yga28f].[none:Forecast Indicator:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{DB6E4BF9-D007-4CFA-BAE6-53EA552FFD0A}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='70' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
